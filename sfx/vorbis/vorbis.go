// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated on Tue, 07 Jul 2020 19:05:22 MDT.
// Code generated by https://git.io/c-for-go. DO NOT EDIT.

package vorbis

/*
#include "stb_vorbis.h"
#include <stdlib.h>
#include "cgo_helpers.h"
*/
import "C"
import "unsafe"

// _get_info function as declared in vorbis/stb_vorbis.c:145
func _get_info(f []stb_vorbis) stb_vorbis_info {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	__ret := C.stb_vorbis_get_info(cf)
	__v := *Newstb_vorbis_infoRef(unsafe.Pointer(&__ret))
	return __v
}

// _get_comment function as declared in vorbis/stb_vorbis.c:148
func _get_comment(f []stb_vorbis) stb_vorbis_comment {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	__ret := C.stb_vorbis_get_comment(cf)
	__v := *Newstb_vorbis_commentRef(unsafe.Pointer(&__ret))
	return __v
}

// _get_error function as declared in vorbis/stb_vorbis.c:151
func _get_error(f []stb_vorbis) int32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	__ret := C.stb_vorbis_get_error(cf)
	__v := (int32)(__ret)
	return __v
}

// _close function as declared in vorbis/stb_vorbis.c:154
func _close(f []stb_vorbis) {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	C.stb_vorbis_close(cf)
}

// _get_sample_offset function as declared in vorbis/stb_vorbis.c:161
func _get_sample_offset(f []stb_vorbis) int32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	__ret := C.stb_vorbis_get_sample_offset(cf)
	__v := (int32)(__ret)
	return __v
}

// _get_file_offset function as declared in vorbis/stb_vorbis.c:165
func _get_file_offset(f []stb_vorbis) uint32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	__ret := C.stb_vorbis_get_file_offset(cf)
	__v := (uint32)(__ret)
	return __v
}

// _open_pushdata function as declared in vorbis/stb_vorbis.c:178
func _open_pushdata(datablock string, datablock_length_in_bytes int32, datablock_memory_consumed_in_bytes []int32, error []int32, alloc_buffer []stb_vorbis_alloc) *stb_vorbis {
	cdatablock, _ := unpackPUcharString(datablock)
	cdatablock_length_in_bytes, _ := (C.int)(datablock_length_in_bytes), cgoAllocsUnknown
	cdatablock_memory_consumed_in_bytes, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&datablock_memory_consumed_in_bytes)).Data)), cgoAllocsUnknown
	cerror, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&error)).Data)), cgoAllocsUnknown
	calloc_buffer, _ := unpackArgSStb_vorbis_alloc(alloc_buffer)
	__ret := C.stb_vorbis_open_pushdata(cdatablock, cdatablock_length_in_bytes, cdatablock_memory_consumed_in_bytes, cerror, calloc_buffer)
	packSStb_vorbis_alloc(alloc_buffer, calloc_buffer)
	__v := *(**stb_vorbis)(unsafe.Pointer(&__ret))
	return __v
}

// _decode_frame_pushdata function as declared in vorbis/stb_vorbis.c:192
func _decode_frame_pushdata(f []stb_vorbis, datablock string, datablock_length_in_bytes int32, channels []int32, output [][][]float32, samples []int32) int32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	cdatablock, _ := unpackPUcharString(datablock)
	cdatablock_length_in_bytes, _ := (C.int)(datablock_length_in_bytes), cgoAllocsUnknown
	cchannels, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&channels)).Data)), cgoAllocsUnknown
	coutput, _ := unpackArgSSSFloat32(output)
	csamples, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&samples)).Data)), cgoAllocsUnknown
	__ret := C.stb_vorbis_decode_frame_pushdata(cf, cdatablock, cdatablock_length_in_bytes, cchannels, coutput, csamples)
	packSSSFloat32(output, coutput)
	__v := (int32)(__ret)
	return __v
}

// _flush_pushdata function as declared in vorbis/stb_vorbis.c:222
func _flush_pushdata(f []stb_vorbis) {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	C.stb_vorbis_flush_pushdata(cf)
}

// _decode_filename function as declared in vorbis/stb_vorbis.c:247
func _decode_filename(filename string, channels []int32, sample_rate []int32, output [][]int16) int32 {
	cfilename, _ := unpackPCharString(filename)
	cchannels, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&channels)).Data)), cgoAllocsUnknown
	csample_rate, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&sample_rate)).Data)), cgoAllocsUnknown
	coutput, _ := unpackArgSSInt16(output)
	__ret := C.stb_vorbis_decode_filename(cfilename, cchannels, csample_rate, coutput)
	packSSInt16(output, coutput)
	__v := (int32)(__ret)
	return __v
}

// _decode_memory function as declared in vorbis/stb_vorbis.c:250
func _decode_memory(mem string, len int32, channels []int32, sample_rate []int32, output [][]int16) int32 {
	cmem, _ := unpackPUcharString(mem)
	clen, _ := (C.int)(len), cgoAllocsUnknown
	cchannels, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&channels)).Data)), cgoAllocsUnknown
	csample_rate, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&sample_rate)).Data)), cgoAllocsUnknown
	coutput, _ := unpackArgSSInt16(output)
	__ret := C.stb_vorbis_decode_memory(cmem, clen, cchannels, csample_rate, coutput)
	packSSInt16(output, coutput)
	__v := (int32)(__ret)
	return __v
}

// _open_memory function as declared in vorbis/stb_vorbis.c:257
func _open_memory(data string, len int32, error []int32, alloc_buffer []stb_vorbis_alloc) *stb_vorbis {
	cdata, _ := unpackPUcharString(data)
	clen, _ := (C.int)(len), cgoAllocsUnknown
	cerror, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&error)).Data)), cgoAllocsUnknown
	calloc_buffer, _ := unpackArgSStb_vorbis_alloc(alloc_buffer)
	__ret := C.stb_vorbis_open_memory(cdata, clen, cerror, calloc_buffer)
	packSStb_vorbis_alloc(alloc_buffer, calloc_buffer)
	__v := *(**stb_vorbis)(unsafe.Pointer(&__ret))
	return __v
}

// _open_filename function as declared in vorbis/stb_vorbis.c:263
func _open_filename(filename string, error []int32, alloc_buffer []stb_vorbis_alloc) *stb_vorbis {
	cfilename, _ := unpackPCharString(filename)
	cerror, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&error)).Data)), cgoAllocsUnknown
	calloc_buffer, _ := unpackArgSStb_vorbis_alloc(alloc_buffer)
	__ret := C.stb_vorbis_open_filename(cfilename, cerror, calloc_buffer)
	packSStb_vorbis_alloc(alloc_buffer, calloc_buffer)
	__v := *(**stb_vorbis)(unsafe.Pointer(&__ret))
	return __v
}

// _open_file function as declared in vorbis/stb_vorbis.c:268
func _open_file(f []file, close_handle_on_close int32, error []int32, alloc_buffer []stb_vorbis_alloc) *stb_vorbis {
	cf, _ := unpackArgSFile(f)
	cclose_handle_on_close, _ := (C.int)(close_handle_on_close), cgoAllocsUnknown
	cerror, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&error)).Data)), cgoAllocsUnknown
	calloc_buffer, _ := unpackArgSStb_vorbis_alloc(alloc_buffer)
	__ret := C.stb_vorbis_open_file(cf, cclose_handle_on_close, cerror, calloc_buffer)
	packSStb_vorbis_alloc(alloc_buffer, calloc_buffer)
	packSFile(f, cf)
	__v := *(**stb_vorbis)(unsafe.Pointer(&__ret))
	return __v
}

// _open_file_section function as declared in vorbis/stb_vorbis.c:278
func _open_file_section(f []file, close_handle_on_close int32, error []int32, alloc_buffer []stb_vorbis_alloc, len uint32) *stb_vorbis {
	cf, _ := unpackArgSFile(f)
	cclose_handle_on_close, _ := (C.int)(close_handle_on_close), cgoAllocsUnknown
	cerror, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&error)).Data)), cgoAllocsUnknown
	calloc_buffer, _ := unpackArgSStb_vorbis_alloc(alloc_buffer)
	clen, _ := (C.uint)(len), cgoAllocsUnknown
	__ret := C.stb_vorbis_open_file_section(cf, cclose_handle_on_close, cerror, calloc_buffer, clen)
	packSStb_vorbis_alloc(alloc_buffer, calloc_buffer)
	packSFile(f, cf)
	__v := *(**stb_vorbis)(unsafe.Pointer(&__ret))
	return __v
}

// _seek_frame function as declared in vorbis/stb_vorbis.c:287
func _seek_frame(f []stb_vorbis, sample_number uint32) int32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	csample_number, _ := (C.uint)(sample_number), cgoAllocsUnknown
	__ret := C.stb_vorbis_seek_frame(cf, csample_number)
	__v := (int32)(__ret)
	return __v
}

// _seek function as declared in vorbis/stb_vorbis.c:288
func _seek(f []stb_vorbis, sample_number uint32) int32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	csample_number, _ := (C.uint)(sample_number), cgoAllocsUnknown
	__ret := C.stb_vorbis_seek(cf, csample_number)
	__v := (int32)(__ret)
	return __v
}

// _seek_start function as declared in vorbis/stb_vorbis.c:296
func _seek_start(f []stb_vorbis) int32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	__ret := C.stb_vorbis_seek_start(cf)
	__v := (int32)(__ret)
	return __v
}

// _stream_length_in_samples function as declared in vorbis/stb_vorbis.c:299
func _stream_length_in_samples(f []stb_vorbis) uint32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	__ret := C.stb_vorbis_stream_length_in_samples(cf)
	__v := (uint32)(__ret)
	return __v
}

// _stream_length_in_seconds function as declared in vorbis/stb_vorbis.c:300
func _stream_length_in_seconds(f []stb_vorbis) float32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	__ret := C.stb_vorbis_stream_length_in_seconds(cf)
	__v := (float32)(__ret)
	return __v
}

// _get_frame_float function as declared in vorbis/stb_vorbis.c:303
func _get_frame_float(f []stb_vorbis, channels []int32, output [][][]float32) int32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	cchannels, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&channels)).Data)), cgoAllocsUnknown
	coutput, _ := unpackArgSSSFloat32(output)
	__ret := C.stb_vorbis_get_frame_float(cf, cchannels, coutput)
	packSSSFloat32(output, coutput)
	__v := (int32)(__ret)
	return __v
}

// _get_frame_short_interleaved function as declared in vorbis/stb_vorbis.c:314
func _get_frame_short_interleaved(f []stb_vorbis, num_c int32, buffer []int16, num_shorts int32) int32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	cnum_c, _ := (C.int)(num_c), cgoAllocsUnknown
	cbuffer, _ := (*C.short)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&buffer)).Data)), cgoAllocsUnknown
	cnum_shorts, _ := (C.int)(num_shorts), cgoAllocsUnknown
	__ret := C.stb_vorbis_get_frame_short_interleaved(cf, cnum_c, cbuffer, cnum_shorts)
	__v := (int32)(__ret)
	return __v
}

// _get_frame_short function as declared in vorbis/stb_vorbis.c:315
func _get_frame_short(f []stb_vorbis, num_c int32, buffer [][]int16, num_samples int32) int32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	cnum_c, _ := (C.int)(num_c), cgoAllocsUnknown
	cbuffer, _ := unpackArgSSInt16(buffer)
	cnum_samples, _ := (C.int)(num_samples), cgoAllocsUnknown
	__ret := C.stb_vorbis_get_frame_short(cf, cnum_c, cbuffer, cnum_samples)
	packSSInt16(buffer, cbuffer)
	__v := (int32)(__ret)
	return __v
}

// _get_samples_float_interleaved function as declared in vorbis/stb_vorbis.c:342
func _get_samples_float_interleaved(f []stb_vorbis, channels int32, buffer []float32, num_floats int32) int32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	cchannels, _ := (C.int)(channels), cgoAllocsUnknown
	cbuffer, _ := (*C.float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&buffer)).Data)), cgoAllocsUnknown
	cnum_floats, _ := (C.int)(num_floats), cgoAllocsUnknown
	__ret := C.stb_vorbis_get_samples_float_interleaved(cf, cchannels, cbuffer, cnum_floats)
	__v := (int32)(__ret)
	return __v
}

// _get_samples_float function as declared in vorbis/stb_vorbis.c:343
func _get_samples_float(f []stb_vorbis, channels int32, buffer [][]float32, num_samples int32) int32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	cchannels, _ := (C.int)(channels), cgoAllocsUnknown
	cbuffer, _ := unpackArgSSFloat32(buffer)
	cnum_samples, _ := (C.int)(num_samples), cgoAllocsUnknown
	__ret := C.stb_vorbis_get_samples_float(cf, cchannels, cbuffer, cnum_samples)
	packSSFloat32(buffer, cbuffer)
	__v := (int32)(__ret)
	return __v
}

// _get_samples_short_interleaved function as declared in vorbis/stb_vorbis.c:350
func _get_samples_short_interleaved(f []stb_vorbis, channels int32, buffer []int16, num_shorts int32) int32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	cchannels, _ := (C.int)(channels), cgoAllocsUnknown
	cbuffer, _ := (*C.short)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&buffer)).Data)), cgoAllocsUnknown
	cnum_shorts, _ := (C.int)(num_shorts), cgoAllocsUnknown
	__ret := C.stb_vorbis_get_samples_short_interleaved(cf, cchannels, cbuffer, cnum_shorts)
	__v := (int32)(__ret)
	return __v
}

// _get_samples_short function as declared in vorbis/stb_vorbis.c:351
func _get_samples_short(f []stb_vorbis, channels int32, buffer [][]int16, num_samples int32) int32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	cchannels, _ := (C.int)(channels), cgoAllocsUnknown
	cbuffer, _ := unpackArgSSInt16(buffer)
	cnum_samples, _ := (C.int)(num_samples), cgoAllocsUnknown
	__ret := C.stb_vorbis_get_samples_short(cf, cchannels, cbuffer, cnum_samples)
	packSSInt16(buffer, cbuffer)
	__v := (int32)(__ret)
	return __v
}
