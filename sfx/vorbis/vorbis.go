// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated on Tue, 07 Jul 2020 19:30:57 MDT.
// Code generated by https://git.io/c-for-go. DO NOT EDIT.

package vorbis

/*
#include "stb_vorbis.h"
#include <stdlib.h>
#include "cgo_helpers.h"
*/
import "C"
import "unsafe"

// GetInfo function as declared in vorbis_temp/stb_vorbis.c:145
func GetInfo(f []stbVorbis) stbVorbisInfo {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	__ret := C.stb_vorbis_get_info(cf)
	__v := *NewstbVorbisInfoRef(unsafe.Pointer(&__ret))
	return __v
}

// GetComment function as declared in vorbis_temp/stb_vorbis.c:148
func GetComment(f []stbVorbis) stbVorbisComment {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	__ret := C.stb_vorbis_get_comment(cf)
	__v := *NewstbVorbisCommentRef(unsafe.Pointer(&__ret))
	return __v
}

// GetError function as declared in vorbis_temp/stb_vorbis.c:151
func GetError(f []stbVorbis) int32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	__ret := C.stb_vorbis_get_error(cf)
	__v := (int32)(__ret)
	return __v
}

// Close function as declared in vorbis_temp/stb_vorbis.c:154
func Close(f []stbVorbis) {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	C.stb_vorbis_close(cf)
}

// GetSampleOffset function as declared in vorbis_temp/stb_vorbis.c:161
func GetSampleOffset(f []stbVorbis) int32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	__ret := C.stb_vorbis_get_sample_offset(cf)
	__v := (int32)(__ret)
	return __v
}

// GetFileOffset function as declared in vorbis_temp/stb_vorbis.c:165
func GetFileOffset(f []stbVorbis) uint32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	__ret := C.stb_vorbis_get_file_offset(cf)
	__v := (uint32)(__ret)
	return __v
}

// OpenPushdata function as declared in vorbis_temp/stb_vorbis.c:178
func OpenPushdata(datablock string, datablockLengthInBytes int32, datablockMemoryConsumedInBytes []int32, error []int32, allocBuffer []stbVorbisAlloc) *stbVorbis {
	cdatablock, _ := unpackPUcharString(datablock)
	cdatablockLengthInBytes, _ := (C.int)(datablockLengthInBytes), cgoAllocsUnknown
	cdatablockMemoryConsumedInBytes, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&datablockMemoryConsumedInBytes)).Data)), cgoAllocsUnknown
	cerror, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&error)).Data)), cgoAllocsUnknown
	callocBuffer, _ := unpackArgSStbVorbisAlloc(allocBuffer)
	__ret := C.stb_vorbis_open_pushdata(cdatablock, cdatablockLengthInBytes, cdatablockMemoryConsumedInBytes, cerror, callocBuffer)
	packSStbVorbisAlloc(allocBuffer, callocBuffer)
	__v := *(**stbVorbis)(unsafe.Pointer(&__ret))
	return __v
}

// DecodeFramePushdata function as declared in vorbis_temp/stb_vorbis.c:192
func DecodeFramePushdata(f []stbVorbis, datablock string, datablockLengthInBytes int32, channels []int32, output [][][]float32, samples []int32) int32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	cdatablock, _ := unpackPUcharString(datablock)
	cdatablockLengthInBytes, _ := (C.int)(datablockLengthInBytes), cgoAllocsUnknown
	cchannels, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&channels)).Data)), cgoAllocsUnknown
	coutput, _ := unpackArgSSSFloat32(output)
	csamples, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&samples)).Data)), cgoAllocsUnknown
	__ret := C.stb_vorbis_decode_frame_pushdata(cf, cdatablock, cdatablockLengthInBytes, cchannels, coutput, csamples)
	packSSSFloat32(output, coutput)
	__v := (int32)(__ret)
	return __v
}

// FlushPushdata function as declared in vorbis_temp/stb_vorbis.c:222
func FlushPushdata(f []stbVorbis) {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	C.stb_vorbis_flush_pushdata(cf)
}

// DecodeFilename function as declared in vorbis_temp/stb_vorbis.c:247
func DecodeFilename(filename string, channels []int32, sampleRate []int32, output [][]int16) int32 {
	cfilename, _ := unpackPCharString(filename)
	cchannels, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&channels)).Data)), cgoAllocsUnknown
	csampleRate, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&sampleRate)).Data)), cgoAllocsUnknown
	coutput, _ := unpackArgSSInt16(output)
	__ret := C.stb_vorbis_decode_filename(cfilename, cchannels, csampleRate, coutput)
	packSSInt16(output, coutput)
	__v := (int32)(__ret)
	return __v
}

// DecodeMemory function as declared in vorbis_temp/stb_vorbis.c:250
func DecodeMemory(mem string, len int32, channels []int32, sampleRate []int32, output [][]int16) int32 {
	cmem, _ := unpackPUcharString(mem)
	clen, _ := (C.int)(len), cgoAllocsUnknown
	cchannels, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&channels)).Data)), cgoAllocsUnknown
	csampleRate, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&sampleRate)).Data)), cgoAllocsUnknown
	coutput, _ := unpackArgSSInt16(output)
	__ret := C.stb_vorbis_decode_memory(cmem, clen, cchannels, csampleRate, coutput)
	packSSInt16(output, coutput)
	__v := (int32)(__ret)
	return __v
}

// OpenMemory function as declared in vorbis_temp/stb_vorbis.c:257
func OpenMemory(data string, len int32, error []int32, allocBuffer []stbVorbisAlloc) *stbVorbis {
	cdata, _ := unpackPUcharString(data)
	clen, _ := (C.int)(len), cgoAllocsUnknown
	cerror, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&error)).Data)), cgoAllocsUnknown
	callocBuffer, _ := unpackArgSStbVorbisAlloc(allocBuffer)
	__ret := C.stb_vorbis_open_memory(cdata, clen, cerror, callocBuffer)
	packSStbVorbisAlloc(allocBuffer, callocBuffer)
	__v := *(**stbVorbis)(unsafe.Pointer(&__ret))
	return __v
}

// OpenFilename function as declared in vorbis_temp/stb_vorbis.c:263
func OpenFilename(filename string, error []int32, allocBuffer []stbVorbisAlloc) *stbVorbis {
	cfilename, _ := unpackPCharString(filename)
	cerror, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&error)).Data)), cgoAllocsUnknown
	callocBuffer, _ := unpackArgSStbVorbisAlloc(allocBuffer)
	__ret := C.stb_vorbis_open_filename(cfilename, cerror, callocBuffer)
	packSStbVorbisAlloc(allocBuffer, callocBuffer)
	__v := *(**stbVorbis)(unsafe.Pointer(&__ret))
	return __v
}

// OpenFile function as declared in vorbis_temp/stb_vorbis.c:268
func OpenFile(f []file, closeHandleOnClose int32, error []int32, allocBuffer []stbVorbisAlloc) *stbVorbis {
	cf, _ := unpackArgSFile(f)
	ccloseHandleOnClose, _ := (C.int)(closeHandleOnClose), cgoAllocsUnknown
	cerror, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&error)).Data)), cgoAllocsUnknown
	callocBuffer, _ := unpackArgSStbVorbisAlloc(allocBuffer)
	__ret := C.stb_vorbis_open_file(cf, ccloseHandleOnClose, cerror, callocBuffer)
	packSStbVorbisAlloc(allocBuffer, callocBuffer)
	packSFile(f, cf)
	__v := *(**stbVorbis)(unsafe.Pointer(&__ret))
	return __v
}

// OpenFileSection function as declared in vorbis_temp/stb_vorbis.c:278
func OpenFileSection(f []file, closeHandleOnClose int32, error []int32, allocBuffer []stbVorbisAlloc, len uint32) *stbVorbis {
	cf, _ := unpackArgSFile(f)
	ccloseHandleOnClose, _ := (C.int)(closeHandleOnClose), cgoAllocsUnknown
	cerror, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&error)).Data)), cgoAllocsUnknown
	callocBuffer, _ := unpackArgSStbVorbisAlloc(allocBuffer)
	clen, _ := (C.uint)(len), cgoAllocsUnknown
	__ret := C.stb_vorbis_open_file_section(cf, ccloseHandleOnClose, cerror, callocBuffer, clen)
	packSStbVorbisAlloc(allocBuffer, callocBuffer)
	packSFile(f, cf)
	__v := *(**stbVorbis)(unsafe.Pointer(&__ret))
	return __v
}

// SeekFrame function as declared in vorbis_temp/stb_vorbis.c:287
func SeekFrame(f []stbVorbis, sampleNumber uint32) int32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	csampleNumber, _ := (C.uint)(sampleNumber), cgoAllocsUnknown
	__ret := C.stb_vorbis_seek_frame(cf, csampleNumber)
	__v := (int32)(__ret)
	return __v
}

// Seek function as declared in vorbis_temp/stb_vorbis.c:288
func Seek(f []stbVorbis, sampleNumber uint32) int32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	csampleNumber, _ := (C.uint)(sampleNumber), cgoAllocsUnknown
	__ret := C.stb_vorbis_seek(cf, csampleNumber)
	__v := (int32)(__ret)
	return __v
}

// SeekStart function as declared in vorbis_temp/stb_vorbis.c:296
func SeekStart(f []stbVorbis) int32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	__ret := C.stb_vorbis_seek_start(cf)
	__v := (int32)(__ret)
	return __v
}

// StreamLengthInSamples function as declared in vorbis_temp/stb_vorbis.c:299
func StreamLengthInSamples(f []stbVorbis) uint32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	__ret := C.stb_vorbis_stream_length_in_samples(cf)
	__v := (uint32)(__ret)
	return __v
}

// StreamLengthInSeconds function as declared in vorbis_temp/stb_vorbis.c:300
func StreamLengthInSeconds(f []stbVorbis) float32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	__ret := C.stb_vorbis_stream_length_in_seconds(cf)
	__v := (float32)(__ret)
	return __v
}

// GetFrameFloat function as declared in vorbis_temp/stb_vorbis.c:303
func GetFrameFloat(f []stbVorbis, channels []int32, output [][][]float32) int32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	cchannels, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&channels)).Data)), cgoAllocsUnknown
	coutput, _ := unpackArgSSSFloat32(output)
	__ret := C.stb_vorbis_get_frame_float(cf, cchannels, coutput)
	packSSSFloat32(output, coutput)
	__v := (int32)(__ret)
	return __v
}

// GetFrameShortInterleaved function as declared in vorbis_temp/stb_vorbis.c:314
func GetFrameShortInterleaved(f []stbVorbis, numC int32, buffer []int16, numShorts int32) int32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	cnumC, _ := (C.int)(numC), cgoAllocsUnknown
	cbuffer, _ := (*C.short)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&buffer)).Data)), cgoAllocsUnknown
	cnumShorts, _ := (C.int)(numShorts), cgoAllocsUnknown
	__ret := C.stb_vorbis_get_frame_short_interleaved(cf, cnumC, cbuffer, cnumShorts)
	__v := (int32)(__ret)
	return __v
}

// GetFrameShort function as declared in vorbis_temp/stb_vorbis.c:315
func GetFrameShort(f []stbVorbis, numC int32, buffer [][]int16, numSamples int32) int32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	cnumC, _ := (C.int)(numC), cgoAllocsUnknown
	cbuffer, _ := unpackArgSSInt16(buffer)
	cnumSamples, _ := (C.int)(numSamples), cgoAllocsUnknown
	__ret := C.stb_vorbis_get_frame_short(cf, cnumC, cbuffer, cnumSamples)
	packSSInt16(buffer, cbuffer)
	__v := (int32)(__ret)
	return __v
}

// GetSamplesFloatInterleaved function as declared in vorbis_temp/stb_vorbis.c:342
func GetSamplesFloatInterleaved(f []stbVorbis, channels int32, buffer []float32, numFloats int32) int32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	cchannels, _ := (C.int)(channels), cgoAllocsUnknown
	cbuffer, _ := (*C.float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&buffer)).Data)), cgoAllocsUnknown
	cnumFloats, _ := (C.int)(numFloats), cgoAllocsUnknown
	__ret := C.stb_vorbis_get_samples_float_interleaved(cf, cchannels, cbuffer, cnumFloats)
	__v := (int32)(__ret)
	return __v
}

// GetSamplesFloat function as declared in vorbis_temp/stb_vorbis.c:343
func GetSamplesFloat(f []stbVorbis, channels int32, buffer [][]float32, numSamples int32) int32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	cchannels, _ := (C.int)(channels), cgoAllocsUnknown
	cbuffer, _ := unpackArgSSFloat32(buffer)
	cnumSamples, _ := (C.int)(numSamples), cgoAllocsUnknown
	__ret := C.stb_vorbis_get_samples_float(cf, cchannels, cbuffer, cnumSamples)
	packSSFloat32(buffer, cbuffer)
	__v := (int32)(__ret)
	return __v
}

// GetSamplesShortInterleaved function as declared in vorbis_temp/stb_vorbis.c:350
func GetSamplesShortInterleaved(f []stbVorbis, channels int32, buffer []int16, numShorts int32) int32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	cchannels, _ := (C.int)(channels), cgoAllocsUnknown
	cbuffer, _ := (*C.short)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&buffer)).Data)), cgoAllocsUnknown
	cnumShorts, _ := (C.int)(numShorts), cgoAllocsUnknown
	__ret := C.stb_vorbis_get_samples_short_interleaved(cf, cchannels, cbuffer, cnumShorts)
	__v := (int32)(__ret)
	return __v
}

// GetSamplesShort function as declared in vorbis_temp/stb_vorbis.c:351
func GetSamplesShort(f []stbVorbis, channels int32, buffer [][]int16, numSamples int32) int32 {
	cf, _ := (*C.stb_vorbis)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&f)).Data)), cgoAllocsUnknown
	cchannels, _ := (C.int)(channels), cgoAllocsUnknown
	cbuffer, _ := unpackArgSSInt16(buffer)
	cnumSamples, _ := (C.int)(numSamples), cgoAllocsUnknown
	__ret := C.stb_vorbis_get_samples_short(cf, cchannels, cbuffer, cnumSamples)
	packSSInt16(buffer, cbuffer)
	__v := (int32)(__ret)
	return __v
}
