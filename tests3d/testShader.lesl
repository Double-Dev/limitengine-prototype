#vert
out vec3 interpNormal;
out vec3 toLight;

const vec3 lightPos = vec3(-5.0, 10.0, 5.0);

void vert() {
    interpNormal = normalize((lesl.transformMat * vec4(lesl.normal, 0.0)).xyz);
	toLight = normalize(lightPos - lesl.worldPos.xyz);
}
#end

#frag
in vec3 interpNormal;
in vec3 toLight;

const vec3 lightColor = vec3(1.0, 1.0, 1.0);
const float ambient = 0.1;

void frag() {
    float lightDot = dot(interpNormal, toLight);
	float brightness = max(lightDot, ambient);
	vec3 diffuse = brightness * lightColor;
	// fragColor = vec4(diffuse, 1.0) * texture(tex, lesl.textureCoord);
	lesl.outColor = vec4(diffuse, 1.0) * vec4(abs(interpNormal), 1.0);
	// lesl.outColor = vec4(1.0, 1.0, 1.0, 1.0);
	// fragColor = vec4(diffuse, 1.0) * vec4(1.0, 1.0, 1.0, 1.0);
}
#end
